// generated by gen-nodes from `vaulgens-chunk.t'.  Do not edit.

#ifndef VAULGENS_H
#define VAULGENS_H

#include <freehdl/fire.h>
#include <freehdl/vaul-chunk.h>

extern tree_chunk_info vaulgens_chunk_info;
extern tree_ctype_info VAUL_ObjectClass_ctype_info;
extern tree_ctype_info ostream_ref_ctype_info;

typedef pIIR_Type (*vaulgens_generic_0_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_0_mtype> vaulgens_generic_0;
pIIR_Type vaul_get_base (tree_base_node *);

typedef VAUL_ObjectClass (*vaulgens_generic_1_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_1_mtype> vaulgens_generic_1;
VAUL_ObjectClass vaul_get_class (tree_base_node *);

typedef IR_Mode (*vaulgens_generic_2_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_2_mtype> vaulgens_generic_2;
IR_Mode vaul_get_mode (tree_base_node *);

typedef pIIR_Type (*vaulgens_generic_3_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_3_mtype> vaulgens_generic_3;
pIIR_Type vaul_get_type (tree_base_node *);

typedef pIIR_ObjectDeclaration (*vaulgens_generic_4_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_4_mtype> vaulgens_generic_4;
pIIR_ObjectDeclaration vaul_get_object_declaration (tree_base_node *);

typedef pIIR_InterfaceList (*vaulgens_generic_5_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_5_mtype> vaulgens_generic_5;
pIIR_InterfaceList vaul_get_generics (tree_base_node *);

typedef pIIR_InterfaceList (*vaulgens_generic_6_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_6_mtype> vaulgens_generic_6;
pIIR_InterfaceList vaul_get_ports (tree_base_node *);

typedef void (*vaulgens_generic_7_mtype) (tree_base_node*, pIIR_InterfaceList generics);
extern tree_generic<vaulgens_generic_7_mtype> vaulgens_generic_7;
void vaul_set_generics (tree_base_node *, pIIR_InterfaceList generics);

typedef void (*vaulgens_generic_8_mtype) (tree_base_node*, pIIR_InterfaceList ports);
extern tree_generic<vaulgens_generic_8_mtype> vaulgens_generic_8;
void vaul_set_ports (tree_base_node *, pIIR_InterfaceList ports);

typedef pIIR_ConcurrentStatementList (*vaulgens_generic_9_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_9_mtype> vaulgens_generic_9;
pIIR_ConcurrentStatementList vaul_get_stats (tree_base_node *);

typedef IR_StaticLevel (*vaulgens_generic_10_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_10_mtype> vaulgens_generic_10;
IR_StaticLevel vaul_compute_static_level (tree_base_node *);

typedef pIIR_ConfigurationSpecificationList (*vaulgens_generic_11_mtype) (tree_base_node*);
extern tree_generic<vaulgens_generic_11_mtype> vaulgens_generic_11;
pIIR_ConfigurationSpecificationList vaul_get_configuration_specifications (tree_base_node *);

typedef void (*vaulgens_generic_12_mtype) (tree_base_node*, pIIR_ConfigurationSpecificationList specs);
extern tree_generic<vaulgens_generic_12_mtype> vaulgens_generic_12;
void vaul_set_configuration_specifications (tree_base_node *, pIIR_ConfigurationSpecificationList specs);

typedef void (*vaulgens_generic_13_mtype) (tree_base_node*, std::ostream& o);
extern tree_generic<vaulgens_generic_13_mtype> vaulgens_generic_13;
void vaul_print_to_ostream (tree_base_node *, std::ostream& o);
pIIR_Type m_vaul_get_base (pIIR_Type );
VAUL_ObjectClass m_vaul_get_class (pIIR_FileDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_SignalDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_VariableDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_ConstantDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_FileInterfaceDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_SignalInterfaceDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_VariableInterfaceDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_ConstantInterfaceDeclaration );
VAUL_ObjectClass m_vaul_get_class (pIIR_AccessReference );
VAUL_ObjectClass m_vaul_get_class (pIIR_SimpleReference );
VAUL_ObjectClass m_vaul_get_class (pIIR_SignalAttr );
VAUL_ObjectClass m_vaul_get_class (pIIR_GenericArrayReference );
VAUL_ObjectClass m_vaul_get_class (pIIR_RecordReference );
VAUL_ObjectClass m_vaul_get_class (pIIR_Expression );
IR_Mode m_vaul_get_mode (pIIR_FileDeclaration );
IR_Mode m_vaul_get_mode (pIIR_SignalDeclaration );
IR_Mode m_vaul_get_mode (pIIR_ConstantDeclaration );
IR_Mode m_vaul_get_mode (pIIR_VariableDeclaration );
IR_Mode m_vaul_get_mode (pIIR_InterfaceDeclaration );
IR_Mode m_vaul_get_mode (pIIR_AccessReference );
IR_Mode m_vaul_get_mode (pIIR_SimpleReference );
IR_Mode m_vaul_get_mode (pIIR_SignalAttr );
IR_Mode m_vaul_get_mode (pIIR_GenericArrayReference );
IR_Mode m_vaul_get_mode (pIIR_RecordReference );
IR_Mode m_vaul_get_mode (pIIR_Expression );
pIIR_Type m_vaul_get_type (pIIR_AccessReference );
pIIR_Type m_vaul_get_type (pIIR_SimpleReference );
pIIR_Type m_vaul_get_type (pIIR_SliceReference );
pIIR_Type m_vaul_get_type (pIIR_ArrayReference );
pIIR_Type m_vaul_get_type (pIIR_RecordReference );
pIIR_ObjectDeclaration m_vaul_get_object_declaration (pIIR_AccessReference );
pIIR_ObjectDeclaration m_vaul_get_object_declaration (pIIR_SimpleReference );
pIIR_ObjectDeclaration m_vaul_get_object_declaration (pIIR_GenericArrayReference );
pIIR_ObjectDeclaration m_vaul_get_object_declaration (pIIR_RecordReference );
pIIR_ObjectDeclaration m_vaul_get_object_declaration (pIIR_Expression );
pIIR_InterfaceList m_vaul_get_generics (pIIR_BlockStatement );
pIIR_InterfaceList m_vaul_get_generics (pIIR_ArchitectureRef );
pIIR_InterfaceList m_vaul_get_generics (pIIR_ArchitectureDeclaration );
pIIR_InterfaceList m_vaul_get_generics (pIIR_EntityDeclaration );
pIIR_InterfaceList m_vaul_get_generics (pIIR_ComponentDeclaration );
pIIR_InterfaceList m_vaul_get_ports (pIIR_BlockStatement );
pIIR_InterfaceList m_vaul_get_ports (pIIR_ArchitectureRef );
pIIR_InterfaceList m_vaul_get_ports (pIIR_ArchitectureDeclaration );
pIIR_InterfaceList m_vaul_get_ports (pIIR_EntityDeclaration );
pIIR_InterfaceList m_vaul_get_ports (pIIR_ComponentDeclaration );
void m_vaul_set_generics (pIIR_BlockStatement , pIIR_InterfaceList generics);
void m_vaul_set_generics (pIIR_EntityDeclaration , pIIR_InterfaceList generics);
void m_vaul_set_generics (pIIR_ComponentDeclaration , pIIR_InterfaceList generics);
void m_vaul_set_ports (pIIR_BlockStatement , pIIR_InterfaceList ports);
void m_vaul_set_ports (pIIR_EntityDeclaration , pIIR_InterfaceList ports);
void m_vaul_set_ports (pIIR_ComponentDeclaration , pIIR_InterfaceList ports);
pIIR_ConcurrentStatementList m_vaul_get_stats (pIIR_BlockStatement );
pIIR_ConcurrentStatementList m_vaul_get_stats (pIIR_ConfigurationDeclaration );
pIIR_ConcurrentStatementList m_vaul_get_stats (pIIR_ArchitectureDeclaration );
pIIR_ConcurrentStatementList m_vaul_get_stats (pIIR_EntityDeclaration );
pIIR_ConcurrentStatementList m_vaul_get_stats (pIIR_ComponentDeclaration );
IR_StaticLevel m_vaul_compute_static_level (pIIR_Type );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ScalarSubtype );
IR_StaticLevel m_vaul_compute_static_level (pIIR_RecordSubtype );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ArraySubtype );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ArrayType );
IR_StaticLevel m_vaul_compute_static_level (pIIR_RecordType );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ArrayRange );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ExplicitRange );
IR_StaticLevel m_vaul_compute_static_level (pIIR_Expression );
IR_StaticLevel m_vaul_compute_static_level (pIIR_Allocator );
IR_StaticLevel m_vaul_compute_static_level (pIIR_RecordAggregate );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ArrayAggregate );
IR_StaticLevel m_vaul_compute_static_level (pIIR_TypeConversion );
IR_StaticLevel m_vaul_compute_static_level (pIIR_QualifiedExpression );
IR_StaticLevel m_vaul_compute_static_level (pIIR_AttrSigFunc );
IR_StaticLevel m_vaul_compute_static_level (pIIR_AttrArrayFunc );
IR_StaticLevel m_vaul_compute_static_level (pIIR_AttrTypeFunc );
IR_StaticLevel m_vaul_compute_static_level (pIIR_AttrTypeValue );
IR_StaticLevel m_vaul_compute_static_level (pIIR_FunctionCall );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ConstantInterfaceDeclaration );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ConstantDeclaration );
IR_StaticLevel m_vaul_compute_static_level (pIIR_Declaration );
IR_StaticLevel m_vaul_compute_static_level (pIIR_RecordReference );
IR_StaticLevel m_vaul_compute_static_level (pIIR_SimpleReference );
IR_StaticLevel m_vaul_compute_static_level (pIIR_ArrayLiteralExpression );
IR_StaticLevel m_vaul_compute_static_level (pIIR_EnumLiteralReference );
IR_StaticLevel m_vaul_compute_static_level (pIIR_AbstractLiteralExpression );
pIIR_ConfigurationSpecificationList m_vaul_get_configuration_specifications (pIIR_ConcurrentGenerateStatement );
pIIR_ConfigurationSpecificationList m_vaul_get_configuration_specifications (pIIR_BlockStatement );
pIIR_ConfigurationSpecificationList m_vaul_get_configuration_specifications (pIIR_ArchitectureDeclaration );
void m_vaul_set_configuration_specifications (pIIR_ConcurrentGenerateStatement , pIIR_ConfigurationSpecificationList specs);
void m_vaul_set_configuration_specifications (pIIR_BlockStatement , pIIR_ConfigurationSpecificationList specs);
void m_vaul_set_configuration_specifications (pIIR_ArchitectureDeclaration , pIIR_ConfigurationSpecificationList specs);
void m_vaul_print_to_ostream (pIIR_AttrTypeFunc , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_AttrTypeValue , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_EnumLiteralReference , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_Allocator , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_AmbgEnumLitRef , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_NamedAssocElem , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_RangeAssocElem , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_OthersIndexedAssociation , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_RangeIndexedAssociation , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_SingleIndexedAssociation , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ArrayAggregate , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_AmbgAggregate , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_QualifiedExpression , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_UnresolvedName , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ChoiceByRange , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_ChoiceByName , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ChoiceByExpression , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ElementDeclaration , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_RecordReference , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ArrayReference , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_AmbgArrayLitRef , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_PhysicalLiteral , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ArrayLiteralExpression , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_AbstractLiteralExpression , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_FunctionCall , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_SliceReference , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_SimpleReference , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_TypeList , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ArrayRange , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ExplicitRange , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_SubprogramDeclaration , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_EnumerationLiteral , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_PhysicalType , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_AccessType , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_ArrayType , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_Subtype , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_Type , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_IftsName , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_SelName , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_AttributeName , std::ostream& o);
void m_vaul_print_to_ostream (pVAUL_SimpleName , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_Declaration , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_FloatingPointLiteral , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_IntegerLiteral , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_TextLiteral , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_Root , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_PosInfo_Sheet , std::ostream& o);
void m_vaul_print_to_ostream (pIIR_PosInfo_TextFile , std::ostream& o);

void init_vaulgens_chunk ();

#endif
